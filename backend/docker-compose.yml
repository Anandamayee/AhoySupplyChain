version: '3.8'

services:
  user-auth:
    build:  
      context: .
      dockerfile: user-auth/Dockerfile
    container_name: user-auth
    deploy:
      replicas: 1
    ports:
      - "5001:5001"  # Expose port to other services, but not to the host
    env_file:
      - config.env
    depends_on:
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - cpcB_network

  tea-process:
    build: 
      context: .
      dockerfile: tea-process/Dockerfile
    container_name: tea-process 
    deploy:
      replicas: 1
    ports:
      - "5002:5002"  # Expose port to other services, but not to the host
    depends_on:
      - kafka
    env_file:
      - config.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - cpcB_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://kafka:9092
      - KAFKA_LISTENER_NAMES=INSIDE,OUTSIDE
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - cpcB_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-datalog:/var/lib/zookeeper/datalog
    networks:
      - cpcB_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "443:443"  # Expose NGINX port to host https
    environment:
      - NGINX_DEBUG=1
      - PASSPHRASE=cpchackathon
    depends_on:
      - user-auth
      - tea-process
    volumes:
      - ./nginx/nginx.config:/etc/nginx/nginx.conf  # Mount external nginx.conf
      - ./opensslkey:/etc/nginx/ssl             # Mount external SSL/TLS certificates
    networks:
      - cpcB_network

volumes:
  kafka-data:
  zookeeper-data:
  zookeeper-datalog:

networks:
  cpcB_network:
    driver: bridge
